# -*- coding: utf-8 -*-
"""проект MVP.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_OgILPGMMTdfqCnvFC_3sE7n5LTlkEb9

Первый этап
"""

# Commented out IPython magic to ensure Python compatibility.
# %pip install pandas
# %pip install pandas openpyxl

import csv
import pandas as pd
from openpyxl import load_workbook
import matplotlib.pyplot as plt

# "Среднемесячной номинальной начисленной заработной плате работников организаций по видам экономической деятельности в Российской Федерации за 2000-2023 гг."

df_2 = pd.read_excel('Project.xlsx', sheet_name='Лист1')
print(df_2.head())

df_filtered_1 = df_2[df_2.iloc[:, 0] == "Строительство"]
print(df_filtered_1.head())

years = df_filtered_1.columns[1:]
values = pd.to_numeric(df_filtered_1.iloc[0, 1:], errors='coerce')

valid_data = values.dropna()
valid_years = years[values.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years, valid_data, color='red', marker='o', linestyle='-', linewidth=2)

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Строительству за 2000-2023 гг.")
plt.grid(True)
plt.xticks(rotation=45, ha='right')

plt.tight_layout()
plt.show()

df_filtered_2 = df_2[df_2.iloc[:, 0] == "Образование"]
print(df_filtered_2.head())

years = df_filtered_2.columns[1:]
values = pd.to_numeric(df_filtered_2.iloc[0, 1:], errors='coerce')

valid_data = values.dropna()
valid_years = years[values.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years, valid_data, color='green', marker='o', linestyle='-', linewidth=2)

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Образованию за 2000-2023 гг.")
plt.grid(True)
plt.xticks(rotation=45, ha='right')

plt.tight_layout()
plt.show()

df_filtered_3 = df_2[df_2.iloc[:, 0] == "Гостиницы и рестораны"]
print(df_filtered_3.head())

years = df_filtered_3.columns[1:]
values = pd.to_numeric(df_filtered_3.iloc[0, 1:], errors='coerce')

valid_data = values.dropna()
valid_years = years[values.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years, valid_data, color='purple', marker='o', linestyle='-', linewidth=2)

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Гостиницам и рестаранам за 2000-2023 гг.")
plt.grid(True)
plt.xticks(rotation=45, ha='right')

plt.tight_layout()
plt.show()

"""**Вывод - зарплаты во всех трех сектрах выросли за исследуемый период.**"""

# данные об уровне инфляции в стране

df_3 = pd.read_excel('inflation.xlsx', sheet_name='Sheet1')
df_3 = df_3.drop([0, 1], axis=0)
df_3 = df_3.iloc[:-9]
df_3 = df_3.reset_index(drop=True)
df_3 = df_3.iloc[::-1]
df_3 = df_3.reset_index(drop=True)
df_3 = df_3.drop(df_3.columns[1:13], axis=1)
df_3.index = df_3.index.astype(float).astype(int)
df_3.index = df_3.index.astype(int)

print("\nTransformed DataFrame:\n", df_3)

df_2 = pd.read_excel('Project.xlsx', sheet_name='Лист1')
df_filtered_1 = df_2[df_2.iloc[:, 0] == "Строительство"]
df_filtered_1_1 = df_2[df_2.iloc[:, 0] == "Строительство с учетом инфляции"]

years1 = df_filtered_1.columns[1:]
values1 = pd.to_numeric(df_filtered_1.iloc[0, 1:], errors='coerce')
valid_data1 = values1.dropna()
valid_years1 = years1[values1.notna()]

years2 = df_filtered_1_1.columns[1:]
values2 = pd.to_numeric(df_filtered_1_1.iloc[0, 1:], errors='coerce')
valid_data2 = values2.dropna()
valid_years2 = years2[values2.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years1, valid_data1, color='lightcoral', marker='o', linestyle='-', linewidth=2, label="Без учета инфляции")
plt.plot(valid_years2, valid_data2, color='darkred', marker='s', linestyle='--', linewidth=2, label="С учетом инфляции")

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Строительству. Сравнение")
plt.grid(True)
plt.xticks(rotation=45, ha='right')
plt.legend()

plt.tight_layout()
plt.show()

df_2 = pd.read_excel('Project.xlsx', sheet_name='Лист1')
df_filtered_2 = df_2[df_2.iloc[:, 0] == "Образование"]
df_filtered_2_2 = df_2[df_2.iloc[:, 0] == "Образование с учетом инфляции"]

years1 = df_filtered_2.columns[1:]
values1 = pd.to_numeric(df_filtered_2.iloc[0, 1:], errors='coerce')
valid_data1 = values1.dropna()
valid_years1 = years1[values1.notna()]

years2 = df_filtered_2_2.columns[1:]
values2 = pd.to_numeric(df_filtered_2_2.iloc[0, 1:], errors='coerce')
valid_data2 = values2.dropna()
valid_years2 = years2[values2.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years1, valid_data1, color='lightgreen', marker='o', linestyle='-', linewidth=2, label="Без учета инфляции")
plt.plot(valid_years2, valid_data2, color='darkgreen', marker='s', linestyle='--', linewidth=2, label="С учетом инфляции")

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Образованию. Сравнение")
plt.grid(True)
plt.xticks(rotation=45, ha='right')
plt.legend()

plt.tight_layout()
plt.show()

df_2 = pd.read_excel('Project.xlsx', sheet_name='Лист1')
df_filtered_3 = df_2[df_2.iloc[:, 0] == "Гостиницы и рестораны"]
df_filtered_3_3 = df_2[df_2.iloc[:, 0] == "Гостиницы и рестораны с учетом инфляции"]

years1 = df_filtered_3.columns[1:]
values1 = pd.to_numeric(df_filtered_3.iloc[0, 1:], errors='coerce')
valid_data1 = values1.dropna()
valid_years1 = years1[values1.notna()]

years2 = df_filtered_3_3.columns[1:]
values2 = pd.to_numeric(df_filtered_3_3.iloc[0, 1:], errors='coerce')
valid_data2 = values2.dropna()
valid_years2 = years2[values2.notna()]

plt.figure(figsize=(12, 6))
plt.plot(valid_years1, valid_data1, color='plum', marker='o', linestyle='-', linewidth=2, label="Без учета инфляции")
plt.plot(valid_years2, valid_data2, color='darkviolet', marker='s', linestyle='--', linewidth=2, label="С учетом инфляции")

plt.xlabel("Год")
plt.ylabel("Зарплата (руб)")
plt.title("Данные по Образованию. Сравнение")
plt.grid(True)
plt.xticks(rotation=45, ha='right')
plt.legend()

plt.tight_layout()
plt.show()

"""**Вывод - данные с учетом инфлиции и без сильно отличаются во всех трех случаях.**"""